<html>
  <body>
    <%- include('partials/header.ejs'); -%>
    <div id="client">
      <div id="top-block">
        <% if (user) { %>
        <h1>Welcome, <%= user %></h1>
        <% } %>
        <h5>Current room <code id="currRoom">::GENERAL</code></h5>
        <div id="chat-block">
          <div
            style="
              text-align: center;
              width: 100%;
              height: 10px;
              padding: 5px 0 0 0;
            "
          >
            <strong>ARCS web - v2.0.0-indev7</strong>
          </div>
          <div id="future"></div>
          <div id="chat-form">
            <form id="form" id="chat_form">
              <!--<input id="chat_input_uploads" type='file' accept='image/*, video/*, audio/*' onchange="getBase64(this)" />-->
              <input
                id="chat_input_uploads"
                type="text"
                placeholder="Links here!"
              />
              <select name="ft" id="ft-select">
                <option value="">SELECT A FILE TYPE.</option>
                <option value="img">Image</option>
                <option value="vid">Video</option>
                <option value="aud">Audio</option>
            </select> 
              <input id="chat_input" type="text" />
              <input type="submit" value="Send" />
            </form>
            <button
              id="scrollButton"
              onclick="var future = document.getElementById('future'); scrollToBottom(future);"
            >
              <i
                class="bi bi-caret-down-square"
                style="font-size: x-large; position: relative; bottom: 8px"
              ></i>
            </button>
          </div>
        </div>
        <button id="dmbutton" onclick="darkmodetoggle()">
          <i class="bi bi-moon-stars-fill" style="font-size: xx-large"></i>
        </button>
        <button id="unamebutton" onclick="window.location = '/login'">
          <i class="bi bi-person-circle" style="font-size: xx-large"></i>
        </button>
        <button
          id="githublink"
          onclick="window.location = 'https:/' + '/github.com/callmeclover/arcs'"
        >
          <i class="bi bi-github" style="font-size: xx-large"></i>
        </button>
        <div>
          <span id="onlinebutton" tooltip="You are online" flow="right"
            ><i
              id="onlineicon"
              class="bi bi-circle"
              style="font-size: xx-large"
            ></i
          ></span>
        </div>

        <form id="room-form" id="room-form">
          <input id="room-input" type="text" />
          <input type="submit" value="Send" />
        </form>
        <p>ID: <span id="ID"></span></p>
        <noscript><p>Please turn on JavaScript or this site <span style="color:rgb(213, 42, 42);"><i>won't</i></span> work</p></noscript>
      </div>
      <script src="/assets/jquery.js"></script>
      <script src="/assets/socket.io.js"></script>
      <script src="/assets/pako.js"></script>
      <script src="/assets/lzstring.js"></script>
      <script src="https://unpkg.com/picmo@latest/dist/umd/index.js"></script>
      <script src="https://unpkg.com/@picmo/popup-picker@latest/dist/umd/index.js"></script>
      <script src="https://unpkg.com/@picmo/renderer-twemoji@latest/dist/umd/index.js"></script>

     <script type="module">
        import { compress, decompress } from './public/assets/lzstring.js';
      </script>

      <script>
        class mModel {
    constructor({ text, file, type, user, room }) {
        this.text = text;
        this.file = file;
        this.type = type;
        this.user = user;
        this.room = room;
    }
}

        var joined = false;

        window.onload = function () {
          Notification.requestPermission();
        };

        function httpGet(theUrl) {
          var xmlHttp = new XMLHttpRequest();
          xmlHttp.open("GET", theUrl, false); // false for synchronous request
          xmlHttp.send(null);  
          return xmlHttp.responseText;
        }

        function scrollToBottom(element) {
          element.scrollTo({
            top: element.scrollHeight,
            left: 0,
            behavior: "smooth",
          });
        }

        var form = document.getElementById("chat_input");
        var form_file = document.getElementById("chat_input_uploads");

        if (localStorage.getItem("user") == undefined) {
          localStorage.setItem(
            "user",
            document.cookie
              .split("; ")
              .find((row) => row.startsWith("user="))
              ?.split("%40")[1]
          );
          var user = localStorage.getItem("user");
        } else {
          var user = localStorage.getItem("user");
        }
        if (localStorage.getItem("ip") == undefined) {
          localStorage.setItem("ip", httpGet("https://api.ipify.org"));
          var ip = localStorage.getItem("ip");
        } else {
          var ip = localStorage.getItem("ip");
        }
        var uname = localStorage.getItem("uname");
        // var pfpic = localStorage.getItem("pfp");

     //   if (uname == null || uname == "" || uname == undefined /*|| localStorage.getItem('pfp') == undefined || localStorage.getItem('pfp') == null*/) {
       //   window.location = "/login";
       // }
        var socket = io.connect();
        socket.on("connect", function (data) {
          socket.emit("join", uname + " (" + user + ") joined from " + ip);
          socket.emit("joinEmit", uname + " (" + user + ") joined.");
        });

        var onlicon = document.getElementById("onlineicon");
        var onltext = document.getElementById("onlinebutton");
        const onlinechecker = setInterval(() => {
          if (socket.connected == true) {
            onlicon.classList.remove("bi-exclamation-circle");
            onlicon.classList.add("bi-circle");
            onltext.setAttribute("tooltip", "You are connected to the server.");
          } else if (socket.connected == false) {
            onlicon.classList.remove("bi-circle");
            onlicon.classList.add("bi-exclamation-circle");
            onltext.setAttribute("tooltip", "You are not connected to the server.");
          }
        }, 1500);

        socket.on("broadJoin", function (data) {
          if (globalThis.joined == false) {
            $("#future").append(data);
            globalThis.joined = true;
          }
        });

        socket.on("ID", function (data) {
          document.getElementById("ID").textContent = data;
        });

        socket.on("broad", function (data) {
          $("#future").append(data);

          var f = document.getElementById("datea");
          f.textContent = new Date().toLocaleString();
          f.removeAttribute("id");

         /* var g = document.getElementById("imga");
          var h = document.getElementById("imgtbd");
          var j = decompress(g.textContent);
          h.src = j;
          g.removeAttribute("id");
          h.removeAttribute("id"); */

          scrollToBottom(document.getElementById("future"));
        });

        socket.on("broadNotif", function (data) {
          if (data.file != null) {
            var notifData = {
              image: data.file,
//              icon: data.user.pfp,
              body: data.text,
            };
            new Notification(
              data.user.disName + " (" + data.user.genName + "): ",
              notifData
            );
          } else {
            var notifData = {
//              icon: data.user.pfp,
              body: data.text,
            };
            new Notification(
              data.user.disName + " (" + data.user.genName + "): ",
              notifData
            );
          }
        });

        socket.on("disconnect", () => {
          socket.emit(
            "disconnected",
            uname + " (" + user + ") left from " + ip
          );
          socket.emit("disconnectEmit", uname + " (" + user + ") left.");
        });

        $("#form").submit(function (e) {
          e.preventDefault();
          var message = $("#chat_input").val();
          var files = $("#chat_input_uploads").val();
          if (message == '/ping') {
            form.value = "";
            form_file.value = "";

            const start = Date.now();

  socket.emit("ping", () => {
    const duration = Date.now() - start;
    console.log(duration);
    $("#future").append("<div id='joinmsg'>Pong! You have a ping of " + duration + " ms.</div>");
          scrollToBottom(document.getElementById("future"));
  });
          } else if (files == "") {
            form.value = "";
            var data = new mModel({
              text: message,
              user: JSON.parse(localStorage.getItem('uObj')),
              room: document.getElementById("currRoom").textContent,
              type: 'none' 
            });

            socket.emit("messages", data);
          } else {
            form.value = "";
            form_file.value = "";
            var data = new mModel({
              text: message,
              file: compress(globalThis.base),
              type: document.getElementById("ft-select").value,
              user: JSON.parse(localStorage.getItem('uObj')),
              room: document.getElementById("currRoom").textContent 
            });
            
            globalThis.base = "";
            socket.emit("messages", data);
          }
        });

        $("#room-form").submit(function (e) {
          e.preventDefault();
          var previous = document.getElementById("currRoom").textContent;
          var roomtojoin = $("#room-input").val();
          document.getElementById("currRoom").textContent = roomtojoin;
          var joinStringConsole = uname + " (" + user + ") joined from " + ip;
          var joinString = uname + " (" + user + ") joined.";
          socket.emit("joinRoom", {
            room: roomtojoin,
            pre: previous,
            jsc: joinStringConsole,
            js: joinString,
          });
        });

        function darkmodetoggle() {
          var e = document.body;
          var e1 = document.getElementById("chat-block");
          var e2 = document.getElementById("chat-form");
          var e3 = document.getElementById("future");
          var e4 = document.getElementById("dmbutton");
          var e5 = document.getElementById("unamebutton");
          var e6 = document.getElementById("onlinebutton");
          var e7 = document.getElementById("joinmsg");
          var e8 = document.getElementById("scrollButton");
          var e9 = document.getElementById("notifbutton");
          var e10 = document.getElementById("emojiButton");
          var e11 = document.getElementById("user");
          var e12 = document.getElementById("githublink");
          e.classList.toggle("dark-mode");
          e1.classList.toggle("dark-mode-b");
          e2.classList.toggle("dark-mode-border-top");
          e3.classList.toggle("dark-mode-fut");
          e4.classList.toggle("dark-mode-dmbtn");
          e5.classList.toggle("dark-mode-dmbtn");
          e6.classList.toggle("dark-mode-dmbtn");
          e7.classList.toggle("joinmsgdark");
          e8.classList.toggle("dark-mode-dmbtn");
          e9.classList.toggle("dark-mode-dmbtn");
          e10.classList.toggle("dark-mode-dmbtn");
          e11.classList.toggle("user-dark");
          e12.classList.toggle("dark-mode-dmbtn");
        }

        function DateDiff(date1, date2) {
    return date1.getTime() - date2.getTime();
}

      </script>
    </div>
  </body>
</html>
